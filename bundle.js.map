{"version":3,"file":"bundle.js","sources":["index.js"],"sourcesContent":["// import * as d3 from \"d3\";\n\n// const width = 250;\n// const height = 250;\n// const padding = 10; // min: 1\n\n// const createNode = (level) => {\n//     const numChildren = Math.ceil(Math.random() * 3) + 1;\n\n//     if (level > 2 && (level >= 5 || numChildren <= 1)) {\n//         return { value: Math.random() + 1 / level };\n//     }\n//     const children = [];\n//     for (let i = 0; i < numChildren; i++) {\n//         children.push(createNode(level + 1));\n//     }\n//     return { children };\n// };\n\n// const data = createNode(1);\n// console.log(\"hey\", data);\n\n// const color = d3.scaleSequential([8, 0], d3.interpolateMagma);\n// const pack = (data) =>\n//     d3.pack().size([width, height]).padding(3)(\n//         d3\n//             .hierarchy(data)\n//             .sum((d) => d.value)\n//             .sort((a, b) => b.value - a.value)\n//     );\n\n// const svg = d3\n//     .select(\"#data\")\n//     .append(\"svg\")\n//     .attr(\"viewBox\", [\n//         -padding,\n//         -padding,\n//         width + padding * 2,\n//         height + padding * 2,\n//     ]);\n// const root = pack(data);\n\n// const node = svg\n//     .selectAll(\"g\")\n//     .data(\n//         d3\n//             .nest()\n//             .key((d) => d.height)\n//             .entries(root.descendants())\n//     )\n//     // .join(\"g\")\n//     .enter()\n//     .append(\"g\")\n//     .selectAll(\"g\")\n//     .data((d) => d.values)\n//     // .join(\"g\")\n//     .enter()\n//     .append(\"g\")\n//     .attr(\"transform\", (d) => `translate(${d.x},${d.y})`);\n\n// const circle = node\n//     .append(\"circle\")\n//     .attr(\"r\", (d) => d.r)\n//     .attr(\"stroke-width\", (d) => 1 / (d.depth + 1))\n//     .attr(\"fill\", (d) => {\n//         console.log(\"star\", d);\n//         return color(1);\n//     });\n\n// circle.on(\"click\", (d) => {\n//     svg.transition()\n//         .duration(1000)\n//         .attr(\"viewBox\", [\n//             d.x - d.r - padding,\n//             d.y - d.r - padding,\n//             d.r * 2 + padding * 2,\n//             d.r * 2 + padding * 2,\n//         ]);\n// });\n\n//E2\n\n// set the dimensions and margins of the graph\nvar width = 450;\nvar height = 450;\n\n// append the svg object to the body of the page\nvar svg = d3\n    .select(\"#data\")\n    .append(\"svg\")\n    .attr(\"width\", 450)\n    .attr(\"height\", 450);\n\n// create dummy data -> just one element per circle\nvar data = [\n    { name: \"A\" },\n    { name: \"B\" },\n    { name: \"C\" },\n    { name: \"D\" },\n    { name: \"E\" },\n    { name: \"F\" },\n    { name: \"G\" },\n    { name: \"H\" },\n];\n\n// Initialize the circle: all located at the center of the svg area\nvar node = svg\n    .append(\"g\")\n    .selectAll(\"circle\")\n    .data(data)\n    .enter()\n    .append(\"circle\")\n    .attr(\"r\", 25)\n    .attr(\"cx\", width / 2)\n    .attr(\"cy\", height / 2)\n    .style(\"fill\", \"#69b3a2\")\n    .style(\"fill-opacity\", 0.3)\n    .attr(\"stroke\", \"#69a2b2\")\n    .style(\"stroke-width\", 4);\n\n// Features of the forces applied to the nodes:\nvar simulation = d3\n    .forceSimulation()\n    .force(\n        \"center\",\n        d3\n            .forceCenter()\n            .x(width / 2)\n            .y(height / 2)\n    ) // Attraction to the center of the svg area\n    .force(\"charge\", d3.forceManyBody().strength(0.5)) // Nodes are attracted one each other of value is > 0\n    .force(\n        \"collide\",\n        d3.forceCollide().strength(0.01).radius(30).iterations(1)\n    ); // Force that avoids circle overlapping\n\n// Apply these forces to the nodes and update their positions.\n// Once the force algorithm is happy with positions ('alpha' value is low enough), simulations will stop.\nsimulation.nodes(data).on(\"tick\", function (d) {\n    node.attr(\"cx\", function (d) {\n        return d.x;\n    }).attr(\"cy\", function (d) {\n        return d.y;\n    });\n});\n"],"names":[],"mappings":"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"}